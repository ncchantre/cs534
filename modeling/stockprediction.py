# -*- coding: utf-8 -*-
"""stockPrediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XLejVy_sjgvA4KgtRZskdwKoDxFyqaAh
"""

import pandas as pd
import numpy as np
from statsmodels.tsa.arima.model import ARIMA

#Sample Data
reddit_data = pd.DataFrame({
    'date': ['2022-01-03', '2022-01-04', '2022-01-05', '2022-01-06', '2022-01-07'],
    'assigned_sentiment': [0.530607, 0.506639, 0.485243, -0.541505, 0.493628],
    'topic_weight': [0.7, 0.7, 0.3, 0.3, 0.7]
})

amazon_stock_data = pd.DataFrame({
    'date': ['2022-01-03', '2022-01-04', '2022-01-05', '2022-01-06', '2022-01-07'],
    'stock_price': [167.55, 170.44, 166.88, 163.45, 163.84]
})

#Merge the stock price data(will eventually be csv) with the reddit data(will also be reformatted csv to add decimal sentiment values, topic weights and dates for each post)
data = pd.merge(amazon_stock_data, reddit_data, on='date', how='inner')

#Sort the data by date
data = data.sort_values(by='date').reset_index(drop=True)

#Calculate lagged sentiment scores and weighted topic scores
data['lagged_sentiment_score'] = data['assigned_sentiment'].shift(1)
data['weighted_topic_score'] = data['assigned_sentiment'] * data['topic_weight']

#Feature Preparation
x = data[['assigned_sentiment', 'lagged_sentiment_score', 'weighted_topic_score']]
y = data['stock_price']

#Incorporate ARIMA model
model = ARIMA(y, order=(5,1,0))
model_fit = model.fit()

#Predict stock for next 5 days
forecast= model_fit.forecast(steps=5)

#Print forecast
print("Forecasted Stock Prices for Next 5 Days:")
print(forecast)

